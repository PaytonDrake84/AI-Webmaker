import tkinter as tk
import sqlite3
from tkinter import scrolledtext

def submit_prompt():
    prompt_text = prompt_entry.get()
    conversation_area.config(state=tk.NORMAL)  # Enable editing to insert text
    conversation_area.insert(tk.END, f"User: {prompt_text}\n")
    conversation_area.config(state=tk.DISABLED)  # Disable editing to keep it read-only
    conversation_area.see(tk.END)  # Scroll to the end of the conversation area
    prompt_entry.delete(0, tk.END)  # Clear the prompt entry box
    
# Function to check login credentials
def check_login(username, password):
    # Connect to the database
    connection = sqlite3.connect("user_credentials.db")
    cursor = connection.cursor()

    # Check if the provided username and password matches any records in the database
    cursor.execute("SELECT * FROM users WHERE username=? AND password=?", (username, password))
    user = cursor.fetchone()

    # Close the connection
    connection.close()

    # Return True if login is successful, False otherwise
    return user is not None

# Example usage
username_input = input("Enter username: ")
password_input = input("Enter password: ")

if check_login(username_input, password_input):
    print("Login successful!")
else:
    print("Login failed. Invalid username or password.")

def open_new_window():
    new_window = tk.Toplevel(root)
    new_window.title("Login Menu")

    # Login menu components
    label_username = tk.Label(new_window, text="Username:")
    label_username.grid(row=0, column=0, padx=10, pady=5, sticky="w")
    
    entry_username = tk.Entry(new_window)
    entry_username.grid(row=0, column=1, padx=10, pady=5, sticky="w")

    label_password = tk.Label(new_window, text="Password:")
    label_password.grid(row=1, column=0, padx=10, pady=5, sticky="w")

    entry_password = tk.Entry(new_window, show="*")  # Show asterisks for password
    entry_password.grid(row=1, column=1, padx=10, pady=5, sticky="w")

    login_button = tk.Button(new_window, text="Login", command=lambda: check_login(entry_username.get(), entry_password.get()))
    login_button.grid(row=2, column=0, columnspan=2, pady=10)

# Create the main window
root = tk.Tk()
root.title("Chat Window")

# Task bar with buttons
task_bar = tk.Frame(root, bg="lightgray", padx=10, pady=5)
task_bar.grid(row=0, column=0, columnspan=2, sticky="ew")

# Buttons on the task bar
button1 = tk.Button(task_bar, text="Button 1", command=open_new_window)
button1.grid(row=0, column=0, padx=5)
button2 = tk.Button(task_bar, text="Button 2")
button2.grid(row=0, column=1, padx=5)
button3 = tk.Button(task_bar, text="Button 3")
button3.grid(row=0, column=2, padx=5)
button4 = tk.Button(task_bar, text="Button 4")
button4.grid(row=0, column=3, padx=5)

# Area 1 for text conversation
conversation_area = scrolledtext.ScrolledText(root, wrap=tk.WORD, width=50, height=15, state=tk.DISABLED)
conversation_area.grid(row=1, column=0, padx=10, pady=10, sticky="w")

# Prompt box and submit button
prompt_label = tk.Label(root, text="Enter prompt:")
prompt_label.grid(row=2, column=0, padx=10, pady=5, sticky="w")

prompt_entry = tk.Entry(root, width=40)
prompt_entry.grid(row=2, column=0, padx=10, pady=5, sticky="w")

submit_button = tk.Button(root, text="Submit", command=submit_prompt)
submit_button.grid(row=2, column=0, padx=5, pady=5, sticky="e")

# Configure row and column weights to allow resizing
root.grid_rowconfigure(1, weight=1)
root.grid_columnconfigure(0, weight=1)

# Run the Tkinter event loop
root.mainloop()
